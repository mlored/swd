<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.0.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-3.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"  />
    <task:annotation-driven />
    

	<context:component-scan base-package="com.sd.isp.dao"/>
	<context:component-scan base-package="com.sd.isp.service"/>
	<context:component-scan base-package="com.sd.isp.resource" />
	<context:component-scan base-package="com.sd.isp.service.util" />
	<context:property-placeholder location="classpath:foo.properties"/>
	
	<bean id="scheduler" class="com.sd.isp.util.Scheduler"></bean>
	
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">${database.mode}</prop>
				<!-- initialize db on startup -->
        		<prop key="hibernate.hbm2ddl.import_files">/import.sql</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.sd.isp.domain" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>
	
    <!-- Cache Configuration -->	
	<cache:annotation-driven />

	<bean name="cacheManager" class="com.google.code.ssm.spring.SSMCacheManager">
		<property name="caches">
			<set>
				<bean class="com.google.code.ssm.spring.SSMCache">
					<constructor-arg name="cache" index="0" ref="defaultCache" />
					<!-- 5 minutes -->
					<constructor-arg name="expiration" index="1" value="300" />
					<!-- @CacheEvict(..., "allEntries" = true) won't work because allowClear 
						is false, so we won't flush accidentally all entries from memcached instance -->
					<constructor-arg name="allowClear" index="2" value="false" />
				</bean>
			</set>
		</property>
	</bean>

	<bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
		<property name="cacheName" value="${cache.name}" />
		<property name="cacheClientFactory">
			<bean name="cacheClientFactory"
				class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl" />
		</property>
		<property name="addressProvider">
			<bean class="com.google.code.ssm.config.DefaultAddressProvider">
				<property name="address" value="${cache.address}" />
			</bean>
		</property>
		<property name="configuration">
			<bean class="com.google.code.ssm.providers.CacheConfiguration">
				<property name="consistentHashing" value="true" />
			</bean>
		</property>
	</bean>
	
	<!-- Security Configuration -->
	<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"></bean>
	
	<import resource="securityContext.xml" />
	
	
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="prometeo875@gmail.com" />
		<property name="password" value="Prometeo+875" />
	
		<property name="javaMailProperties">
		     <props>
	           	<prop key="mail.smtp.auth">true</prop>
	           	<prop key="mail.smtp.starttls.enable">true</prop>
	       	     </props>
		</property>
	</bean>

	<bean id="mailMail" class="com.sd.isp.util.MailMail">
		<property name="mailSender" ref="mailSender" />
		<property name="simpleMailMessage" ref="customeMailMessage" />
	</bean>

	<bean id="customeMailMessage"
		class="org.springframework.mail.SimpleMailMessage">
	
		<property name="from" value="${email.incoming.sms.from.address}" />
		<property name="subject" value="${email.incoming.sms.subject}" />
		<property name="text">
		   <value>
			"${email.incoming.sms.message}"
		   </value>
        </property>
	</bean>
</beans>